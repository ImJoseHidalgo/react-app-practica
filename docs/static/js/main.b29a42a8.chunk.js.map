{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categ","type","placeholder","value","onChange","target","getGifs","category","a","API","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","rating","url","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"uLAEaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAchD,OACA,sBAAMC,SATe,SAACC,GACpBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAc,SAAAS,GAAK,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAKlB,SACE,uBACEO,KAAK,OACLC,YAAY,aACZC,MAAOV,EACPW,SAjBqB,SAACR,GACxBF,EAAcE,EAAES,OAAOF,a,+BCNdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDACiCC,UAAUH,GAD3C,8DAEFI,MAAMF,GAFJ,cAEfG,EAFe,gBAGAA,EAAKC,OAHL,uBAGdC,EAHc,EAGdA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,OAAQH,EAAIG,OACZC,IAAG,UAAEJ,EAAIK,cAAN,aAAE,EAAYC,iBAAiBF,QATjB,kBAYdN,GAZc,4CAAH,sDCEPS,EAAc,SAAC,GAA4B,IAA1BL,EAAyB,EAAzBA,MAAOE,EAAkB,EAAlBA,IAAkB,EAAbD,OACxC,OACE,sBAAKK,UAAU,yCAAf,UACE,6BAAKN,IACL,qBAAKO,IAAKL,EAAKM,IAAKR,QCFbS,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EACdf,mBAAS,CACjCsB,KAAM,GACNe,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAgBxC,OAVAC,qBAAU,WACR1B,EAAQC,GACL0B,MAAK,SAAAC,GACJH,EAAS,CACPjB,KAAMoB,EACNL,SAAS,SAGd,CAACtB,IAEGuB,EDbmBK,CAAa5B,GAA/BO,EAF+B,EAE/BA,KAAMe,EAFyB,EAEzBA,QAEd,OAAQ,qCACN,oBAAIJ,UAAU,mDAAd,SAAkElB,IACjEsB,GAAW,oBAAIJ,UAAU,mCAAd,yBACZ,qBAAKA,UAAU,kBAAf,SACGX,EAAKE,KAAI,SAAAC,GAAG,OAAI,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aES9BkB,EAjBM,WAAO,IAAD,EACW5C,mBAAS,CAAC,mBADrB,mBAClB6C,EADkB,KACN9C,EADM,KAGzB,OACE,iCACE,mCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,OAE9B,yBAASkC,UAAU,iBAAnB,SACE,6BACGY,EAAWrB,KAAI,SAAAT,GAAQ,OAAI,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,c,MCVpD+B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b29a42a8.chunk.js","sourcesContent":["import React, { useState }from 'react';\n\nexport const AddCategory = ({ setCategories }) => {\n  const [inputValue, setInputValue] = useState('');\n\n  const handleInpuChange = (e) => {\n    setInputValue(e.target.value);\n  }\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if(inputValue.trim().length > 2 ){\n      setCategories(categ => [inputValue, ...categ]);\n      setInputValue('');\n    }\n  }\n\n  return (\n  <form onSubmit={handleSubmit}>\n    <input \n      type='text'\n      placeholder='Buscar Gif'\n      value={inputValue}\n      onChange={handleInpuChange}\n    />\n  </form>)\n};\n","export const getGifs = async( category ) => {\n  const API = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=9&api_key=BYKsFzfenvLYOR9gbpPxcHDFvxTZ2C7W`;\n  const resp = await fetch(API);\n  const {data} = await resp.json();\n  const gifs = data.map(img => {\n    return {\n      id: img.id,\n      title: img.title,\n      rating: img.rating,\n      url: img.images?.downsized_medium.url\n    }\n  })\n  return gifs;\n}","import React from 'react'\n\nexport const GifGridItem = ({ title, url, rating }) => {\n  return (\n    <div className='card animate__animated animate__fadeIn'>\n      <h3>{title}</h3>\n      <img src={url} alt={title} />\n    </div>\n  )\n}\n","import React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from \"./GifGridItem\";\n\nexport const GifGrid = ({ category }) => {\n\n  const { data, loading } = useFetchGifs(category);\n    \n  return (<>\n    <h3 className='category-title animate__animated animate__fadeIn'>{category}</h3>\n    {loading && <h3 className='animate__animated animate__flash'>Loading Pa!</h3>}\n    <div className='cards-container'>\n      {data.map(img => <GifGridItem key={img.id} {...img} />)}\n    </div>\n  </>)\n}\n","import { useEffect, useState } from \"react\";\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = (category) => {\n  const [state, setstate] = useState({\n    data: [],\n    loading: true\n  });\n\n  useEffect(() => {\n    getGifs(category)\n      .then(imgs => {\n        setstate({\n          data: imgs,\n          loading: false\n        })\n      })      \n  }, [category]);\n\n  return state; // { data:[], loading:true }\n}\n","import React, { useState } from \"react\";\nimport { AddCategory } from \"./components/AddCategory\";\nimport { GifGrid } from \"./components/GifGrid\";\n\nconst GifExpertApp = () => {\n  const [categories, setCategories] = useState(['stewie Griffin']);\n\n  return (\n    <main>\n      <header>\n        <h2>Busca un GIF</h2>\n        <AddCategory setCategories={setCategories} />\n      </header>\n      <section className='gifs-container'>\n        <ol>\n          {categories.map(category => <GifGrid key={category} category={category}/>)}\n        </ol>\n      </section>\n    </main>\n  )\n};\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}